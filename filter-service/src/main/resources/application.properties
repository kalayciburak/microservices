spring.application.name=filter-service
server.port=0

eureka.instance.preferIpAddress=true
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.serviceUrl.defaultZone=http://localhost:9000/eureka
eureka.instance.instance-id=${spring.application.name}:${instanceId:${random.value}}

spring.kafka.topic.name=topics1
spring.kafka.consumer.bootstrap-servers:localhost:9092
spring.kafka.consumer.group-id:filter
spring.kafka.consumer.auto-offset-reset:earliest
spring.kafka.consumer.key-deserializer:org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer:org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.data.mongodb.uri=mongodb://localhost:27017
spring.data.mongodb.database=inventory